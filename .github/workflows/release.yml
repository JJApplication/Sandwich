# This workflow will build a golang project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-go

name: Sandwich action

on:
  push:
    branches: [ "main" ]
env:
  GO111MODULE: on
  GONOSUMDB: "*"
  
jobs:

  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3

    - name: Set up Go
      uses: actions/setup-go@v3
      with:
        go-version: 1.19

    - name: Get date
      run: echo "DATE=$(date +"%Y-%m-%d-%H:%M:%S")" >> $GITHUB_ENV

    - name: Set Tag
      run: echo "TagName=$(date +"%Y%m%d.%H_%M_%S")" >> $GITHUB_ENV

    - name: Check
      run: pwd && ls && echo "${{ env.DATE }}"

    - name: Build
      run: go build -mod=mod -ldflags='-w -s' --trimpath -v -o sandwich

    - name: Done
      run: echo "build success"

    - name: CreateMD
      run: |
        touch ./tmp.md
        echo "" > ./tmp.md
        echo "# ðŸš€ New Release" >> ./tmp.md
        echo "# ðŸ¤– Published by bot" >> ./tmp.md
        echo "## ðŸ“„ Whatâ€˜s new" >> ./tmp.md
        echo "" >> ./tmp.md
        echo "${{ github.event.head_commit.message }}" >> ./tmp.md
        echo "MD<<EOF" >> $GITHUB_ENV
        cat ./tmp.md >> $GITHUB_ENV
        echo "EOF" >> $GITHUB_ENV

    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ env.TagName }}
        release_name: Sandwich ${{ env.DATE }}
        body: ${{ env.MD }}
        draft: false
        prerelease: false

    - name: Upload Release Asset
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }}
        asset_path: ./sandwich
        asset_name: sandwich
        asset_content_type: application/octet-stream
